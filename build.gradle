// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    repositories {
        mavenCentral()
        google()
        gradlePluginPortal()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.1'
    }
}

repositories {
    google()
    mavenCentral()
    gradlePluginPortal()
    flatDir {
        dirs 'libs'
    }
}

apply plugin: 'android'

sourceCompatibility = 1.7

dependencies {
    implementation 'com.tundem.aboutlibraries:library:2.0.3@aar'
    implementation 'com.android.support:support-v4:+'
    implementation 'org.ow2.asm:asm:4.0'
    implementation 'com.esotericsoftware.kryo:kryo:2.24.0'
    implementation 'org.apache.lucene:lucene-core:4.7.1'
    implementation 'org.apache.lucene:lucene-misc:4.7.1'
    implementation 'org.apache.lucene:lucene-queries:4.7.1'
    implementation 'org.apache.lucene:lucene-analyzers-common:4.7.1'
    implementation 'org.apache.lucene:lucene-codecs:4.7.1'
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    dexOptions {
        preDexLibraries = false
    }

    packagingOptions {
        pickFirst 'org/apache/lucene/util/SPIClassIterator.class'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/services/org.apache.lucene.codecs.Codec'
        exclude 'META-INF/services/org.apache.lucene.codecs.PostingsFormat'
        exclude 'META-INF/services/org.apache.lucene.codecs.DocValuesFormat'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }


    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src', 'aidl']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }

    signingConfigs { release { } }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    if (project.hasProperty('storeFile') &&
        project.hasProperty('storePassword') &&
        project.hasProperty('keyPassword') &&
        project.hasProperty('keyAlias')) {

        android.signingConfigs.release.storeFile = file(storeFile)
        android.signingConfigs.release.storePassword = storePassword
        android.signingConfigs.release.keyPassword = keyPassword
        android.signingConfigs.release.keyAlias = keyAlias
    } else {
        buildTypes.release.signingConfig = null
    }

}

